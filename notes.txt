vim: colorcolumn=80

ok so halfway through figuring this out i've realized that making notes about
how i struggled to get this working probably could help someone


	GETTING THE INIT PROCESS TO WORK
1. the kernel doesn't detect the init process when it's in e.g. /bin/init
that's probably an issue with the way i'm creating the initramfs? ig
easy workaround: just put the executable in /init

2. Failed to execute /init (error -2)
this one is confusing - i tried looking up the error code in
	https://github.com/torvalds/linux/blob/master/include/uapi/asm-generic/errno.h
	https://github.com/torvalds/linux/blob/master/include/uapi/asm-generic/errno-base.h
but i couldn't find -2
i was trying a bunch of random stuff to try and fix that, until i've found
https://bootlin.com/blog/debugging-init-failures/
apparently the minus doesn't really mean anything, and the error is just ENOENT

the fix was to compile it statically, using the -static gcc flag

	GETTING THE INIT PROCESS TO LAUNCH OTHER STUFF
so i wasn't able to launch other processes from init, even itself
after a lot of tinkering i tried to just get busybox and use its shell as an
init, which was useful during debugging
haha my fucking syscall implementation was wrong fml

	brk() is slightly misleading
i spent 2 hours debugging the shell command parser just to realize that my sbrk
implementation was bugged. the issue was, that, according to the man pages:
- brk() sets the program break, but it doesn't return any info about it
- sbrk() moves the break, and it returns the *previous* break
linux only has a brk() syscall, so i've assumed that it's a blend of both - that
is, it sets the break to a fixed value, and returns the previous one. turns out
that it returns the new break
